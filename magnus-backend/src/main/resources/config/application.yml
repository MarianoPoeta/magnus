# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

---
# Enable springdoc in development mode by default
spring:
  config:
    activate:
      on-profile: 'dev'
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    config-url: /v3/api-docs/swagger-config
    urls-primary-name: magnus-public
    oauth:
      client-id: web_app
      client-secret: changeit
    operationsSorter: alpha
    tagsSorter: alpha
    try-it-out-enabled: true
  # Scan for actual REST controllers instead of using static api.yml
  packages-to-scan: com.magnus.web.rest
  paths-to-match: /api/**
  group-configs:
    - group: magnus-public
      display-name: Public API
      paths-to-match: /api/**
      paths-to-exclude: /api/admin/**
    - group: magnus-admin
      display-name: Admin API
      paths-to-match: /api/admin/**
    - group: magnus-management
      display-name: Management API
      paths-to-match: /management/**
---
# Conditionally disable springdoc on missing api-docs profile (but allow dev profile)
spring:
  config:
    activate:
      on-profile: '!api-docs & !dev'
springdoc:
  api-docs:
    enabled: false
---
# Enable springdoc when api-docs profile is active
spring:
  config:
    activate:
      on-profile: 'api-docs'
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    config-url: /v3/api-docs/swagger-config
    urls-primary-name: magnus-public
    oauth:
      client-id: web_app
      client-secret: changeit
    operationsSorter: alpha
    tagsSorter: alpha
    try-it-out-enabled: true
  # Scan for actual REST controllers instead of using static api.yml
  packages-to-scan: com.magnus.web.rest
  paths-to-match: /api/**
  group-configs:
    - group: magnus-public
      display-name: Public API
      paths-to-match: /api/**
      paths-to-exclude: /api/admin/**
    - group: magnus-admin
      display-name: Admin API
      paths-to-match: /api/admin/**
    - group: magnus-management
      display-name: Management API
      paths-to-match: /management/**
---
management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          - configprops
          - env
          - health
          - info
          - jhimetrics
          - jhiopenapigroups
          - logfile
          - loggers
          - prometheus
          - threaddump
          - caches
          - liquibase
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState,db
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
    env:
      enabled: true
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  prometheus:
    metrics:
      export:
        enabled: true
        step: 60
  observations:
    key-values:
      application: ${spring.application.name}
  metrics:
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    data:
      repository:
        autotime:
          enabled: true
    tags:
      application: ${spring.application.name}

spring:
  application:
    name: magnus
  docker:
    compose:
      enabled: true
      lifecycle-management: start-only
      file: src/main/docker/services.yml
  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by maven when building the JAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
    active: '@spring.profiles.active@'
    group:
      dev:
        - dev
        - api-docs
        # Uncomment to activate TLS for the dev profile
        #- tls
  jmx:
    enabled: false
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
  jpa:
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.timezone.default_storage: NORMALIZE
      hibernate.type.preferred_instant_jdbc_type: TIMESTAMP
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: true
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
  messages:
    basename: i18n/messages
  main:
    allow-bean-definition-overriding: true
  mvc:
    problemdetails:
      enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          authority-prefix: ''
          authorities-claim-name: auth
  task:
    execution:
      thread-name-prefix: magnus-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: magnus-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML
  output:
    ansi:
      console-available: true

server:
  servlet:
    session:
      cookie:
        http-only: true

springdoc:
  show-actuator: true

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  clientApp:
    name: 'magnusApp'
  # By default CORS is disabled. Uncomment to enable.
  # cors:
  #   allowed-origins: "http://localhost:8100,http://localhost:9000"
  #   allowed-methods: "*"
  #   allowed-headers: "*"
  #   exposed-headers: "Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params"
  #   allow-credentials: true
  #   max-age: 1800
  mail:
    from: magnus@localhost
  api-docs:
    default-include-pattern: /api/**
    management-include-pattern: /management/**
    title: Magnus API
    description: Magnus API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license: unlicensed
    license-url:
  security:

# jhipster-needle-add-application-yaml-document
---
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# Party Budget Bliss specific configuration
application:
  # Workflow automation settings
  workflow:
    task-generation:
      enabled: ${WORKFLOW_TASK_GENERATION_ENABLED:true}
      async-processing: ${WORKFLOW_ASYNC_PROCESSING:true}
    notifications:
      enabled: ${WORKFLOW_NOTIFICATION_ENABLED:true}
    scheduling:
      shopping-days-before: ${TASK_SHOPPING_DAYS_BEFORE:2}
      preparation-days-before: ${TASK_PREPARATION_DAYS_BEFORE:1}
      delivery-days-before: ${TASK_DELIVERY_DAYS_BEFORE:0}
      cooking-hours-before: ${TASK_COOKING_HOURS_BEFORE:4}
  
  # Caching configuration for different features
  cache:
    templates-ttl: ${CACHE_TEMPLATES_TTL:3600}
    shopping-lists-ttl: ${CACHE_SHOPPING_LISTS_TTL:900}
    task-lists-ttl: ${CACHE_TASK_LISTS_TTL:300}
    dashboard-analytics-ttl: ${CACHE_DASHBOARD_ANALYTICS_TTL:1800}
  
  # WebSocket configuration
  websocket:
    heartbeat-interval: ${WEBSOCKET_HEARTBEAT_INTERVAL:10000}
    task-scheduler-pool-size: ${WEBSOCKET_TASK_SCHEDULER_POOL_SIZE:10}
  
  # Real-time synchronization settings
  realtime:
    cook-logistics-sync: true
    shopping-consolidation: true
    task-status-broadcast: true
    ingredient-modification-sync: true
